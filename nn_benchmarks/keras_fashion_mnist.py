# -*- coding: utf-8 -*-
"""Keras_fashion_mnist.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IbOWSsBHf9w8r5RpS5MqYv7TIOFfJSk2
"""

import tensorflow as tf
from tensorflow.keras.layers import Dense, Input, Conv2D, Flatten, Dropout
from tensorflow.keras.models import Model

import numpy as np
import matplotlib.pyplot as plt

(Xtrain, Ytrain), (Xtest, Ytest) = tf.keras.datasets.fashion_mnist.load_data()

Xtrain = np.expand_dims(Xtrain, axis=-1)
Xtest = np.expand_dims(Xtest, axis=-1)

N = Xtrain.shape[0]
D = 28*28
K = len(set(Ytrain) | set(Ytest))

i = Input(shape=(28, 28, 1), batch_size=32)
x = Conv2D(32, (3, 3), 2, activation='relu')(i)
x = Conv2D(64, (3, 3), 2, activation='relu')(x)
x = Conv2D(128, (3, 3), 2, activation='relu')(x)
x = Conv2D(256, (2, 2), 2, activation='relu')(x)
x = Flatten()(x)
x = Dropout(0.2)(x)
x = Dense(512, activation='relu')(x)
x = Dropout(0.2)(x)
x = Dense(256, activation='relu')(x)
x = Dropout(0.2)(x)
x = Dense(K, activation='softmax')(x)

model = Model(i, x)

model.compile(optimizer=tf.keras.optimizers.SGD(),
              loss=tf.keras.losses.sparse_categorical_crossentropy,
              metrics=['accuracy'])

model.fit(Xtrain, Ytrain, validation_data=(Xtest, Ytest), epochs=15)

r = model.history

loss = r.history['loss']
val_loss = r.history['val_loss']
acc = r.history['accuracy']
val_acc = r.history['val_accuracy']

plt.plot(loss, label='loss')
plt.plot(val_loss, label='val_loss')
plt.legend()
plt.show()

plt.plot(acc, label='acc')
plt.plot(val_acc, label='val_acc')
plt.legend()
plt.show()